// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PizzaDev.Data;

#nullable disable

namespace PizzaDev.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240714223110_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PizzaDev.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalPrice = 0
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.CartItem", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("integer");

                    b.Property<int>("CartId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("PizzaId", "CartId", "TypeId", "SizeId");

                    b.HasIndex("CartId");

                    b.HasIndex("SizeId");

                    b.HasIndex("TypeId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("PizzaDev.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Meat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Large"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Small"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Vegetarian"
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.Pizza", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Rating")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Pizzas");

                    b.HasData(
                        new
                        {
                            Id = 99,
                            CategoryId = 1,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/f035c7f46c0844069722f2bb3ee9f113_584x584.jpeg",
                            Name = "Pepperoni Fresh with Peppers",
                            Price = 803,
                            Rating = 4
                        },
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/2ffc31bb-132c-4c99-b894-53f7107a1441.jpg",
                            Name = "Cheese",
                            Price = 245,
                            Rating = 6
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/6652fec1-04df-49d8-8744-232f1032c44b.jpg",
                            Name = "Chicken Barbecue",
                            Price = 295,
                            Rating = 4
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/af553bf5-3887-4501-b88e-8f0f55229429.jpg",
                            Name = "Sweet and Sour Chicken",
                            Price = 275,
                            Rating = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/b750f576-4a83-48e6-a283-5a8efb68c35d.jpg",
                            Name = "Cheeseburger Pizza",
                            Price = 415,
                            Rating = 8
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/1e1a6e80-b3ba-4a44-b6b9-beae5b1fbf27.jpg",
                            Name = "Crazy Pepperoni",
                            Price = 580,
                            Rating = 2
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/d2e337e9-e07a-4199-9cc1-501cc44cb8f8.jpg",
                            Name = "Pepperoni",
                            Price = 675,
                            Rating = 9
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/d48003cd-902c-420d-9f28-92d9dc5f73b4.jpg",
                            Name = "Margherita",
                            Price = 450,
                            Rating = 10
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 5,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/ec29465e-606b-4a04-a03e-da3940d37e0e.jpg",
                            Name = "Four Seasons",
                            Price = 395,
                            Rating = 10
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            ImageUrl = "https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/30367198-f3bd-44ed-9314-6f717960da07.jpg",
                            Name = "Vegetables and Mushrooms",
                            Price = 285,
                            Rating = 7
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.PizzaSize", b =>
                {
                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<int>("PizzaId")
                        .HasColumnType("integer");

                    b.HasKey("SizeId", "PizzaId");

                    b.HasIndex("PizzaId");

                    b.ToTable("PizzaSizes");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            PizzaId = 99
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 99
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 99
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 1
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 1
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 2
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 2
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 3
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 3
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 3
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 4
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 4
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 4
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 5
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 5
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 6
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 6
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 6
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 7
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 7
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 7
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 8
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 8
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 8
                        },
                        new
                        {
                            SizeId = 1,
                            PizzaId = 9
                        },
                        new
                        {
                            SizeId = 2,
                            PizzaId = 9
                        },
                        new
                        {
                            SizeId = 3,
                            PizzaId = 9
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.PizzaType", b =>
                {
                    b.Property<int>("PizzaId")
                        .HasColumnType("integer");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer");

                    b.HasKey("PizzaId", "TypeId");

                    b.HasIndex("TypeId");

                    b.ToTable("PizzaTypes");

                    b.HasData(
                        new
                        {
                            PizzaId = 99,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 99,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 1,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 2,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 3,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 4,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 4,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 5,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 6,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 6,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 7,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 7,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 8,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 8,
                            TypeId = 1
                        },
                        new
                        {
                            PizzaId = 9,
                            TypeId = 2
                        },
                        new
                        {
                            PizzaId = 9,
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Size");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "26cm"
                        },
                        new
                        {
                            Id = 2,
                            Name = "30cm"
                        },
                        new
                        {
                            Id = 3,
                            Name = "40cm"
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Name = "Thin"
                        },
                        new
                        {
                            Id = 1,
                            Name = "Traditional"
                        });
                });

            modelBuilder.Entity("PizzaDev.Models.CartItem", b =>
                {
                    b.HasOne("PizzaDev.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDev.Models.Pizza", "Pizza")
                        .WithMany("CartItems")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDev.Models.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDev.Models.Type", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Pizza");

                    b.Navigation("Size");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PizzaDev.Models.Pizza", b =>
                {
                    b.HasOne("PizzaDev.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PizzaDev.Models.PizzaSize", b =>
                {
                    b.HasOne("PizzaDev.Models.Pizza", "Pizza")
                        .WithMany("PizzaSizes")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDev.Models.Size", "Size")
                        .WithMany("PizzaSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("PizzaDev.Models.PizzaType", b =>
                {
                    b.HasOne("PizzaDev.Models.Pizza", "Pizza")
                        .WithMany("PizzaTypes")
                        .HasForeignKey("PizzaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PizzaDev.Models.Type", "Type")
                        .WithMany("PizzaTypes")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pizza");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("PizzaDev.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("PizzaDev.Models.Pizza", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("PizzaSizes");

                    b.Navigation("PizzaTypes");
                });

            modelBuilder.Entity("PizzaDev.Models.Size", b =>
                {
                    b.Navigation("PizzaSizes");
                });

            modelBuilder.Entity("PizzaDev.Models.Type", b =>
                {
                    b.Navigation("PizzaTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
